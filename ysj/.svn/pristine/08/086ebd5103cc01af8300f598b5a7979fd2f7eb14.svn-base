(function(window,angular,undefined){
	var editApp = angular.module("editApp",['main_services','main_filters','main_directives','ngRoute'])
	.controller('getRecommendSource',getRSource)
	// .controller('getRecordList',getRList)
	.controller('getQOList',getQOList)
	.controller('getLoaBill',getLoaBill)
	.controller('getTrackInfo',getTrackInfo)
	.controller('getMessageList',getMessageList)
	.controller('getUnreadMessageCount',getUnreadMessageCount)
	.controller('getInfo',getInfo)
	.controller('addQuote',addQuote)
	.controller('getAgent',getAgent)
	.controller('supplyHall_getLineList',getLineList)
	.controller('getCity',getCity)
	.controller('getQuotedDeatil',getQuotedDeatil)
	.controller('closeQuotedInfo',closeQuotedInfo)

	function closeQuotedInfo(closeQuoted,invalidTheBid,$timeout,$scope,$log){
		var params={
			sourceId: global.QueryString.id
		}
		$scope.giveUpPrice = function(){
			closeQuoted.giveUp(params,{},function(strData){
				$(".dialog_wrap").hide();
				$(".cancelPrice_success").show();
				if(strData.status.statusCode =="200"){
					$timeout(function(){
						window.location.href=global.getContextPath()+"/my_order.htm"
					},1500)
				}else{
					$scope.errorMsg = strData.status.errorMsg;
					$(".cancelPrice_fail").show();
					return false;
				}
			})
		}

		$scope.bkPromise = function(){
			invalidTheBid.break(params,{},function(strData){
				$(".dialog_wrap").hide();
				$(".giveUp_success").show();
				if(strData.status.statusCode =="200"){
					$timeout(function(){
						window.location.href=global.getContextPath()+"/my_order.htm"
					},1500)
				}else{
					$scope.errorMsg = strData.status.errorMsg;
					$(".giveUp_fail").show();
					return false;
				}
			})
		}
	}
	closeQuotedInfo.$inject=['closeQuotedInfo','invalidTheBid','$timeout','$scope','$log']

	function getQuotedDeatil(gRS,getQuotedDeatil,getRecordList,driverLen,$scope,$rootScope,$log){
		getQuotedDeatil().then(function(data){
			$scope.info = data.data;
			driverLen.len = $scope.info.needDriverNum;
			// $log.info($scope.info);
		}).then(function(){
			var gbParams = {
				"sourceCount": "4",
				"startCodeP": $scope.info.endCodeP,
				"endCodeP": $scope.info.startCodeP
			}
			gRS.get(gbParams,{},function(strData){
				$scope.items = strData.data;
				$scope.len = strData.data.length;
			})

			if($scope.info.status == "05"){
				var params= {
					"targetId": $scope.info.loadInfo.loadId,
					"remarkType": "05"
				}

				getRecordList.get(params,{},function(strData){
					console.log(strData.data);
					$scope.news = strData.data;//暂时没有数据
				})
			}
		})

		$scope.showCPDiag = function(){
			$(".closePrice_dialog").show();
		}

		$scope.showGPDiag = function(){
			$(".giveUp_dialog").show();
		}

		$scope.cancel = function(){
			$(".dialog_wrap").hide();
		}
	}
	getQuotedDeatil.$inject = ['getRecommendSource','getQuotedDeatil','getRecordList','driverLen','$scope','$rootScope','$log']

	function getCity(getCity,getLineList,addline,delLine,$scope,$log){
		getCity().then(function(strData){
			$scope.cities = strData.data.subRegion;
		}).then(function(){
			getLineList().then(function(strData){
				$scope.Lines = strData.data;
			})
		})

		$scope.addOrLine = function(){
			var lineCode = {
				departureCode : $("#start_line").val(),
				destinationCode : $("#end_line").val()
			}
			addline.saveLine(lineCode,lineCode,function(strData){
				if(strData.status.statusCode == "200"){
					getLineList().then(function(strData){
						$scope.Lines = strData.data;
					})
				}else{
					window.confirm(strData.status.errorMsg);
				}
			})
		}

		$scope.deleteLine = function(index){
			var _index = index+1,
				lineInfoId = { lineInfoId:$(".routes>li:nth-child("+_index+")").attr("ref")};
			$scope.Lines.splice(index, 1);
			delLine.deleteLine(lineInfoId,lineInfoId,function(strData){
				// $log.info(strData.status);
			});
		}
	}
	getCity.$inject = ['getCity','getLineList','addLine','delLine','$scope','$log']

	function getLineList(getLineList,getallLines,selectLines,lID,pageIndex,recode,getSubReg,$scope,$location,$log){
		var params = {};

		$location.path('');
		$scope.val1 = "";
		$scope.val2 = "";
		$scope.val3 = "";
		$scope.val4 = "";
		$scope.numPages = [];
		getLineList().then(function(strData){
			$scope.Lines = strData.data;
			$scope.len = strData.data.length;
			lID.lineId = params.lineId = strData.data[0].lineInfoId;
			$scope.defDepartureCode = strData.data[0].departureCode;
			$scope.defDestinationCode = strData.data[0].destinationCode;
			$scope.addClass = function(index){
				if(index == 0){
					return true;
				}
			}
			$scope.changeClass = function(index){
				$(".filter_w>li").find(".ol_w").addClass("hide");
				pageIndex.index = 0;
				$('select').prop('selectedIndex', 0);
				var _index = index+1,
					$ele = $(".tab_tit>li:nth-child("+_index+")"),
					lineId = $ele.attr("ref");
				$ele.addClass("current").siblings().removeClass("current");
				$location.path('/'+lineId);
				lID.lineId = lineId;
				params = {
					lineId: lineId
				}
				$scope.val1 = $(".class_2").val();
				$scope.val2 = $(".class_3").val();
				$scope.val3 = $(".needLength").val();
				$scope.val4 = $(".needType").val();
				$(".returned").attr("checked",false);
				$scope.defDepartureCode = $(".tab_tit>li:nth-child("+_index+")").attr("data-dept");
				$scope.defDestinationCode = $(".tab_tit>li:nth-child("+_index+")").attr("data-dest");

				getallLines().then(function(strData){
					pageIndex.index = 0;
					$scope.lines = strData.data.rows;
					$scope.lineLen = strData.data.rows.length;
					if($scope.lineLen>0){
						new Pagination({
			        		page:$("#kkpager"),
			        		totalPage: strData.data.pageCount,
			        		currentPage : strData.data.current+1,
			        		onSwitch : function(n){
								var _index = n-1;
								pageIndex.index = _index;
								getallLines().then(function(strData){
									$scope.lines = strData.data.rows;
								})
							}
			        	})
					}else{
						$("#kkpager").empty();
					}
				}).then(function(){
					recode.code = $scope.defDepartureCode;
					getSubReg().then(function(strData){
						$scope.selfVals = strData.data;
					})
				}).then(function(){
					recode.code = $scope.defDestinationCode;
					getSubReg().then(function(strData){
						$scope.selsVals = strData.data;
					})
				})
			}
		}).then(function(){
			getallLines().then(function(strData){
				$scope.lines = strData.data.rows;
				$scope.lineLen = strData.data.rows.length;
				if($scope.lineLen>0){
					new Pagination({
		        		page:$("#kkpager"),
		        		totalPage: strData.data.pageCount,
		        		currentPage : strData.data.current+1,
		        		onSwitch : function(n){
							var _index = n-1;
							pageIndex.index = _index;
							getallLines().then(function(strData){
								$scope.lines = strData.data.rows;
							})
						}
		        	})
				}
				
			})
		}).then(function(){
			recode.code = $scope.defDepartureCode;
			getSubReg().then(function(strData){
				$scope.selfVals = strData.data;
			})
		}).then(function(){
			recode.code = $scope.defDestinationCode;
			getSubReg().then(function(strData){
				$scope.selsVals = strData.data;
			})
		}).then(function(){
			$(".select_ol").mCustomScrollbar();
		})

		$scope.searchByNo = function(){
			var queryContent = $("#queryContent").val();
			window.open('search_list.html?queryContent='+queryContent,'_blank')
		}

		$scope.showSelect = function(index){
			var dom = $(".filter_w>li:eq("+index+")").find(".ol_w");
			if(dom.find("li").length<5){
				$(".filter_w>li:eq("+index+")").find(".select_ol").addClass("height_atuo");
			}else{
				$(".filter_w>li:eq("+index+")").find(".select_ol").removeClass("height_atuo");
			}
			dom.toggleClass("hide").parents("li").siblings().find(".ol_w").addClass("hide");
		}

		$scope.sortByTime = function(){
			if(!params.sort){
				params.sort = "01"
			}else{
				if(params.sort == "01"){
					params.sort = "02"
				}else{
					params.sort = "01"
				}
			}

			selectLines.get(params,{},function(strData){
				$scope.lines = strData.data.rows;
				$scope.lineLen = strData.data.rows.length;
				$scope.numPages = [];
				for (var i = 0; i <strData.data.pageCount; i++) {
					$scope.numPages.push([]);
				}
			})
		}

		$scope.getBack = function(){
			if(!params.returned){
				params.returned = "01"
			}else{
				delete params.returned
			}

			selectLines.get(params,{},function(strData){
				$scope.lines = strData.data.rows;
				$scope.lineLen = strData.data.rows.length;
				$scope.numPages = [];
				for (var i = 0; i <strData.data.pageCount; i++) {
					$scope.numPages.push([]);
				}
			})
		}

		$scope.changeSC = function(sc){
			params.startCodeC = sc;
			selectLines.get(params,{},function(strData){
				$scope.lines = strData.data.rows;
				$scope.lineLen = strData.data.rows.length;
				$scope.numPages = [];
				for (var i = 0; i <strData.data.pageCount; i++) {
					$scope.numPages.push([]);
				}
			})
		}

		$scope.changeEC = function(ec){
			params.endCodeC = ec;
			selectLines.get(params,{},function(strData){
				$scope.lines = strData.data.rows;
				$scope.lineLen = strData.data.rows.length;
				$scope.numPages = [];
				for (var i = 0; i <strData.data.pageCount; i++) {
					$scope.numPages.push([]);
				}
			})
		}

		$scope.changeLG = function(lg){
			params.needLength = lg;
			selectLines.get(params,{},function(strData){
				$scope.lines = strData.data.rows;
				$scope.lineLen = strData.data.rows.length;
				$scope.numPages = [];
				for (var i = 0; i <strData.data.pageCount; i++) {
					$scope.numPages.push([]);
				}
			})
		}

		$scope.changeTY = function(type){
			params.needType = type;
			selectLines.get(params,{},function(strData){
				$scope.lines = strData.data.rows;
				$scope.lineLen = strData.data.rows.length;
				$scope.numPages = [];
				for (var i = 0; i <strData.data.pageCount; i++) {
					$scope.numPages.push([]);
				}
			})
		}

		$scope.repeatDown = function(len){
			$("div.holder").jPages({
		      containerID : "order_list",
		      perPage : len
		    });
		    $(".order_list").css("min-height","auto");
		}

		$scope.getPages = function(index){
			pageIndex.index = index;
			$("body").scrollTop(0,0);
			selectLines.get(params,{},function(strData){
				$scope.lines = strData.data.rows;
				$scope.lineLen = strData.data.rows.length;
				$scope.numPages = [];
				for (var i = 0; i <strData.data.pageCount; i++) {
					$scope.numPages.push([]);
				}
			})
		}
	}
	getLineList.$inject = ['getLineList','getallLines','selectLines','lineId','getPageIndex','defSupCode','getSubReg','$scope','$location','$log']

	function getAgent(getAgent,$scope,$log){
		getAgent.get({},{},function(strData){
			$scope.perInfo = strData.data;
			var user = global.getUser(),
				fullData = $.extend({},user,strData.data);
			$scope.userHeader = fullData.userHead?global.imgsrc(fullData.userHead,{}):"img/head.png";
			$scope.tel = fullData.telphone;
		});
	}
	getAgent.$inject=['getAgent','$scope','$log']

	function addQuote(doAddQuote,driverLen,$scope,$timeout,$window,$log){
		$scope.price = "";
		$scope.changeForm = function(){
			$scope.price = $("input[name=doller]").val();
			console.log($scope.price && !isNaN(parseInt($scope.price)));
			if($scope.price && !isNaN(parseInt($scope.price))){
				$scope.price = Math.abs($scope.price).toFixed(2);
			}else{
				$scope.price ="";
			}
		}
		$scope.addQuote = function(){
			var params = {
				sourceId: global.QueryString.id,
				price: $scope.price,
				remark : $("textarea").val()
			}
			doAddQuote.saveQuote(params,{},function(strData){
				$scope.status = strData.status.statusCode;
				if($scope.status == "200"){
					$(".price_success").show();
					$timeout(function(){
						window.location.href=global.getContextPath()+"/my_order.htm"
					},3000)
				}else{
					$(".price_fail").show();
				}
			})
		}
		$scope.close_dialog = function(){
			$(".price_fail").hide();
		}
		$scope.showGiveUp = function(){
			$(".giveUp").toggle();
		}
		$scope.giveUp = function(){
			$(".ordinaryDialog,.hyDialog").show();
		}

		$scope.count = function(){
			$(".def-val").remove();
			$scope.sum = $("textarea").val().length;
		}
	}
	addQuote.$inject=['doAddQuote','driverLen','$scope','$timeout','$window','$log']

	function getInfo(getInfo,gRS,$scope,$log){
		getInfo.get({sourceId:global.QueryString.id},{},function(strData){
			$scope.Info = strData.data;
			$scope.flag = false;
			if($scope.Info.hasBegin ==0){
				$scope.flag = true
			}
			var gbParams = {
				"sourceCount": "4",
				"startCodeP": $scope.Info.endCodeP,
				"endCodeP": $scope.Info.startCodeP
			}
			gRS.get(gbParams,{},function(strData){
				$scope.items = strData.data;
				$scope.len = strData.data.length;
			})
		})
		$scope.close_dialog = function(){
			$(".price_fail").hide();
		}
	}
	getInfo.$inject=['getInfo','getRecommendSource','$scope','$log']

	function getUnreadMessageCount(getUnreadMessageCount,$scope,$log){
		$scope.flag = true;
		$scope.count = 0;
		setInterval(function(){
			getUnreadMessageCount.get({},{},function(strData){
				$scope.count++;
			})
		},300000)
		$scope.$watch('count',function(newValue,oldValue, scope){
			if($scope.count>0){
				$scope.flag = true;
			}else{
				$scope.flag = false;
			}
		})
	}
	getUnreadMessageCount.$inject=['getUnreadMessageCount','$scope','$log']

	function getMessageList(getMessageList,$scope,$log){
		$scope.news =[];
        getMessageList.get({},{},function(strData){
        	$scope.news = strData.data.rows;
        	var num = strData.data.current+1;

        	new Pagination({
        		page:$("#kkpager"),
        		totalPage: strData.data.pageCount,
        		currentPage : num,
        		onSwitch : function(n){
					var _index = n-1;
					getMessageList.get({pageIndex: _index},{},function(strData){
						$scope.news = strData.data.rows;
					})
				}
        	});
        })
	}
	getMessageList.$inject = ['getMessageList','$scope','$log']

	function getTrackInfo(getTrackInfo,getGeo,$scope,$log){
		var count=0;
		getTrackInfo().then(function(strData){
			$scope.Info = strData.data.info;
			$scope.track = strData.data.track;
		}).then(function(){
			var param={},
				trackList=[],
				starCity = $scope.Info.senderArea[1].regionName+$scope.Info.senderArea[0].regionName+$scope.Info.senderAddress,
				endCity = $scope.Info.receiverArea[1].regionName+$scope.Info.receiverArea[0].regionName+$scope.Info.receiverAddress;
				trackList.push([starCity]);
				trackList.push([endCity]);
			if($scope.track.length>0){
				var speedList=[],exception=[],exceptionName=[],expSTime=[],expETime=[],track = $scope.track,param={};
				
				for(var i = 0;i<track.length;i++){
					trackList.push([track[i].latitude,track[i].longitude]);
					speedList.push(track[i].speed);
					exception.push([track[i].isException]);
					exceptionName.push([track[i].itemName]);
					expSTime.push([track[i].feedbackTime]);
					expETime.push([track[i].endTime]);
				}
			}
			param ={
				okey : trackList,
				carNo : $scope.Info.plateNumber,
				exception : exception,
				speed : [],
				exceptionName : exceptionName,
				expSTime: expSTime,
				expETime: expETime,
				addStar: starCity,
				addEnd: endCity,
				speed: speedList
			}
			$scope.map = $("#big_map").GdMap(param);

		})

		$scope.getGeo = function(){
			var action = new MarkerAction();
			$(".getLPos").attr("disabled","disabled").addClass("disabled-class");
			getGeo().then(function(strData){
				if(strData.status.statusCode == "200"){
					var options = {
						position:[strData.data.longitude,strData.data.latitude],
						speed:strData.data.speed,
						feedbackTime: strData.data.feedbackTime,
						carNo: $scope.Info.plateNumber
					};
					if(count == 0){
						action.addMarker($scope.map, options);
					}else{
						action.updateMarker($scope.map, options);
					}
					count = 1;
				}else{
					window.confirm("获取实时位置超时,请稍后再试。");
				}
				$(".getLPos").removeAttr("disabled").removeClass("disabled-class");
			})
		}
	}
	getTrackInfo.$inject=['getTrackInfo','getGeo','$scope','$log'];

	function getLoaBill(getLoaBill,gRList,loadId,$scope,$log){
		if(global.QueryString.status || global.QueryString.status =="05"){
			getLoaBill().then(function(strData){
				loadId.loadId = strData.data.loadId;
				$scope.Info = strData.data;
			}).then(function(){
				gRList().then(function(strData){
					$scope.news = strData.data;
				})
			})
		}
	}
	getLoaBill.$inject=['getLoaBill','getRecordList','getloadId','$scope','$log'];

	function getRSource(gRS,$scope,$log){
		gRS.get({sourceCount:'4'},{},function(strData){
			$scope.items = strData.data;
			$log.info(strData.data);
			$scope.len = strData.data.length;
		})
	}
	getRSource.$inject=['getRecommendSource','$scope','$log'];

	function getQOList(gQ,$scope,$log){//test
		gQ().then(function(strData){
			$scope.lines = strData.data.rows;
		})

		$scope.repeatDown = function(){
			$("div.holder").jPages({
		      containerID : "itemContainer",
		      perPage : 5
		    });
		}
	}
	getQOList.$inject =['getQuotedOrderList','$scope','$log']

})(window,window.angular)