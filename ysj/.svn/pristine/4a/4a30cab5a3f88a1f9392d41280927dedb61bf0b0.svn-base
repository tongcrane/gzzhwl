var Pagination = function(options) {
	
	this.totalPage = 0;// 总页数
	this.currentPage = 1;// 默认选中的页数
	
	this.opt = $.extend({
		preposePagesCount: 2, // 当前页的最大紧邻前置页数（不包括最前面的显示页数）
		postposePagesCount: 2,// 当前页的最大紧邻后置页数
		firstPagesCount: 2,// 第一个"..."前显示的页数
		lastPagesCount: 0// 第二个"..."后显示的页数
	}, options);
	
	
	this.refreshPage = function(totalPage, current) {
		var _this = this;
		_this.totalPage = totalPage;
		_this.currentPage = current;
		
		_this._onSwitch(current);
		
		_this._resetPagination();
	}
	
	this._onSwitch = function(page){
		var _this = this;
		var total = _this.totalPage;
		var offset = total-page;
		if(page >= 4){
			_this.opt.postposePagesCount = 2;
		} else {
			_this.opt.postposePagesCount = 5 - page;
		}
		if(offset==3){
			_this.opt.postposePagesCount = 3;
		}
		if(offset <= 2){
			_this.opt.preposePagesCount = 4-offset;
		} else {
			_this.opt.preposePagesCount = 2;
		}
	}
	
	this._resetPagination = function() {
		var _this = this;
		
		var paginationInner = '',
			totalPage = _this.totalPage > 0 ? _this.totalPage : 1,
			currPage = (_this.currentPage <= totalPage && _this.currentPage) > 0 ? _this.currentPage : 1,
			preposePagesCount = _this.opt.preposePagesCount >= 0 ? _this.opt.preposePagesCount : 2,
			postposePagesCount = _this.opt.postposePagesCount >= 0 ? _this.opt.postposePagesCount : 1,
			firstPagesCount = _this.opt.firstPagesCount >= 0 ? _this.opt.firstPagesCount : 2,
			lastPagesCount = _this.opt.lastPagesCount >= 0 ? _this.opt.lastPagesCount : 0;

		// currPage前的页码展示
		paginationInner += currPage === 1 ? '<span class="pagination-start"><span>上一页</span></span>' : '<a class="pagination-prev"><span>上一页</span></a>';

		if (currPage <= firstPagesCount + preposePagesCount + 1) {
			for(var i=1; i<currPage; i++) {
				paginationInner += _this._renderActivePage(i);
			}

		} else {
			for(var i=1; i<=firstPagesCount; i++) {
				paginationInner += _this._renderActivePage(i);
			}
			paginationInner += '<span class="pagination-break">...</span>';
			for(var i=currPage-preposePagesCount; i<=currPage-1; i++) {
				paginationInner += _this._renderActivePage(i);
			}
		}

		// currPage的页码展示
		paginationInner += '<span class="pagination-curr">' + currPage + '</span>';

		// currPage后的页码展示
		if (currPage >= totalPage - lastPagesCount - postposePagesCount) {
			for(var i=currPage+1; i<=totalPage; i++) {
				paginationInner += _this._renderActivePage(i);
			}

		} else {
			for(var i=currPage+1; i<=currPage+postposePagesCount; i++) {
				paginationInner += _this._renderActivePage(i);
			}
			paginationInner += '<span class="pagination-break">...</span>';
			for(var i=totalPage-lastPagesCount+1; i<=totalPage; i++) {
				paginationInner += _this._renderActivePage(i);
			}
		}

		paginationInner += currPage === totalPage ? '<span class="pagination-end"><span>下一页</span></span>' : '<a class="pagination-next"><span>下一页<span></a>';
		
		_this.opt.page.html(paginationInner);
	}
	
	this._renderActivePage = function(index) {
		return '<a class="pagination-spec" data-page="' + index + '">' + index + '</a>';
	} 
}
