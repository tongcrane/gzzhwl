package com.gzzhwl.core.data.model;

import java.io.Serializable;

import org.hibernate.validator.constraints.Length;


/**
 * 
 * zh_order_source_info表
 * @author mew
 *
 */
public class OrderSourceInfo implements Serializable {
	@Length(max = 36, message = "sourceId超过长度限制")
	private java.lang.String sourceId; // 货源标识
	@Length(max = 36, message = "infoId超过长度限制")
	private java.lang.String infoId; // 信息标识
	@Length(max = 10, message = "startCodeP超过长度限制")
	private java.lang.String startCodeP; // 起始区域(省)
	@Length(max = 10, message = "startCodeC超过长度限制")
	private java.lang.String startCodeC; // 起始区域(市)
	@Length(max = 10, message = "endCodeP超过长度限制")
	private java.lang.String endCodeP; // 终点区域(省)
	@Length(max = 10, message = "endCodeC超过长度限制")
	private java.lang.String endCodeC; // 终点区域(市)
	@Length(max = 20, message = "needType超过长度限制")
	private java.lang.String needType; // 车型要求
	@Length(max = 20, message = "needLength超过长度限制")
	private java.lang.String needLength; // 车长要求
	@Length(max = 20, message = "needArriveTime超过长度限制")
	private java.lang.String needArriveTime; // 要求到达时间
	@Length(max = 2, message = "needDriverNum超过长度限制")
	private java.lang.String needDriverNum; // 要求司机人数
	@Length(max = 10, message = "miles超过长度限制")
	private java.lang.String miles; // 公里数
	@Length(max = 10, message = "level超过长度限制")
	private java.lang.String level; // 优先级
	@Length(max = 10, message = "estimatedPrice超过长度限制")
	private java.lang.String estimatedPrice; // 预计应付
	@Length(max = 36, message = "transitRequire超过长度限制")
	private java.lang.String transitRequire; // 在途要求
	@Length(max = 20, message = "startTime超过长度限制")
	private java.lang.String startTime; // 竞价开始时间
	@Length(max = 20, message = "endTime超过长度限制")
	private java.lang.String endTime; // 竞价结束时间
	@Length(max = 400, message = "remark超过长度限制")
	private java.lang.String remark; // 备注
	@Length(max = 400, message = "rejectReason超过长度限制")
	private java.lang.String rejectReason; // 拒绝理由
	@Length(max = 2, message = "status超过长度限制")
	private java.lang.String status; // 货源状态
	@Length(max = 36, message = "createdBy超过长度限制")
	private java.lang.String createdBy; // 创建人
	@Length(max = 20, message = "createdTime超过长度限制")
	private java.lang.String createdTime; // 创建时间
	@Length(max = 36, message = "updatedBy超过长度限制")
	private java.lang.String updatedBy; // 修改人
	@Length(max = 20, message = "updatedTime超过长度限制")
	private java.lang.String updatedTime; // 修改时间
	@Length(max = 2, message = "isDeleted超过长度限制")
	private java.lang.String isDeleted; // 是否删除


	/**
     * 获取货源标识属性
     *
     * @return sourceId
     */
	public java.lang.String getSourceId() {
		return sourceId;
	}
	
	/**
	 * 设置货源标识属性
	 *
	 * @param sourceId
	 */
	public void setSourceId(java.lang.String sourceId) {
		this.sourceId = sourceId;
	}
	
	/**
     * 获取信息标识属性
     *
     * @return infoId
     */
	public java.lang.String getInfoId() {
		return infoId;
	}
	
	/**
	 * 设置信息标识属性
	 *
	 * @param infoId
	 */
	public void setInfoId(java.lang.String infoId) {
		this.infoId = infoId;
	}
	
	/**
     * 获取起始区域(省)属性
     *
     * @return startCodeP
     */
	public java.lang.String getStartCodeP() {
		return startCodeP;
	}
	
	/**
	 * 设置起始区域(省)属性
	 *
	 * @param startCodeP
	 */
	public void setStartCodeP(java.lang.String startCodeP) {
		this.startCodeP = startCodeP;
	}
	
	/**
     * 获取起始区域(市)属性
     *
     * @return startCodeC
     */
	public java.lang.String getStartCodeC() {
		return startCodeC;
	}
	
	/**
	 * 设置起始区域(市)属性
	 *
	 * @param startCodeC
	 */
	public void setStartCodeC(java.lang.String startCodeC) {
		this.startCodeC = startCodeC;
	}
	
	/**
     * 获取终点区域(省)属性
     *
     * @return endCodeP
     */
	public java.lang.String getEndCodeP() {
		return endCodeP;
	}
	
	/**
	 * 设置终点区域(省)属性
	 *
	 * @param endCodeP
	 */
	public void setEndCodeP(java.lang.String endCodeP) {
		this.endCodeP = endCodeP;
	}
	
	/**
     * 获取终点区域(市)属性
     *
     * @return endCodeC
     */
	public java.lang.String getEndCodeC() {
		return endCodeC;
	}
	
	/**
	 * 设置终点区域(市)属性
	 *
	 * @param endCodeC
	 */
	public void setEndCodeC(java.lang.String endCodeC) {
		this.endCodeC = endCodeC;
	}
	
	/**
     * 获取车型要求属性
     *
     * @return needType
     */
	public java.lang.String getNeedType() {
		return needType;
	}
	
	/**
	 * 设置车型要求属性
	 *
	 * @param needType
	 */
	public void setNeedType(java.lang.String needType) {
		this.needType = needType;
	}
	
	/**
     * 获取车长要求属性
     *
     * @return needLength
     */
	public java.lang.String getNeedLength() {
		return needLength;
	}
	
	/**
	 * 设置车长要求属性
	 *
	 * @param needLength
	 */
	public void setNeedLength(java.lang.String needLength) {
		this.needLength = needLength;
	}
	
	/**
     * 获取要求到达时间属性
     *
     * @return needArriveTime
     */
	public java.lang.String getNeedArriveTime() {
		return needArriveTime;
	}
	
	/**
	 * 设置要求到达时间属性
	 *
	 * @param needArriveTime
	 */
	public void setNeedArriveTime(java.lang.String needArriveTime) {
		this.needArriveTime = needArriveTime;
	}
	
	/**
     * 获取要求司机人数属性
     *
     * @return needDriverNum
     */
	public java.lang.String getNeedDriverNum() {
		return needDriverNum;
	}
	
	/**
	 * 设置要求司机人数属性
	 *
	 * @param needDriverNum
	 */
	public void setNeedDriverNum(java.lang.String needDriverNum) {
		this.needDriverNum = needDriverNum;
	}
	
	/**
     * 获取公里数属性
     *
     * @return miles
     */
	public java.lang.String getMiles() {
		return miles;
	}
	
	/**
	 * 设置公里数属性
	 *
	 * @param miles
	 */
	public void setMiles(java.lang.String miles) {
		this.miles = miles;
	}
	
	/**
     * 获取优先级属性
     *
     * @return level
     */
	public java.lang.String getLevel() {
		return level;
	}
	
	/**
	 * 设置优先级属性
	 *
	 * @param level
	 */
	public void setLevel(java.lang.String level) {
		this.level = level;
	}
	
	/**
     * 获取预计应付属性
     *
     * @return estimatedPrice
     */
	public java.lang.String getEstimatedPrice() {
		return estimatedPrice;
	}
	
	/**
	 * 设置预计应付属性
	 *
	 * @param estimatedPrice
	 */
	public void setEstimatedPrice(java.lang.String estimatedPrice) {
		this.estimatedPrice = estimatedPrice;
	}
	
	/**
     * 获取在途要求属性
     *
     * @return transitRequire
     */
	public java.lang.String getTransitRequire() {
		return transitRequire;
	}
	
	/**
	 * 设置在途要求属性
	 *
	 * @param transitRequire
	 */
	public void setTransitRequire(java.lang.String transitRequire) {
		this.transitRequire = transitRequire;
	}
	
	/**
     * 获取竞价开始时间属性
     *
     * @return startTime
     */
	public java.lang.String getStartTime() {
		return startTime;
	}
	
	/**
	 * 设置竞价开始时间属性
	 *
	 * @param startTime
	 */
	public void setStartTime(java.lang.String startTime) {
		this.startTime = startTime;
	}
	
	/**
     * 获取竞价结束时间属性
     *
     * @return endTime
     */
	public java.lang.String getEndTime() {
		return endTime;
	}
	
	/**
	 * 设置竞价结束时间属性
	 *
	 * @param endTime
	 */
	public void setEndTime(java.lang.String endTime) {
		this.endTime = endTime;
	}
	
	/**
     * 获取备注属性
     *
     * @return remark
     */
	public java.lang.String getRemark() {
		return remark;
	}
	
	/**
	 * 设置备注属性
	 *
	 * @param remark
	 */
	public void setRemark(java.lang.String remark) {
		this.remark = remark;
	}
	
	/**
     * 获取拒绝理由属性
     *
     * @return rejectReason
     */
	public java.lang.String getRejectReason() {
		return rejectReason;
	}
	
	/**
	 * 设置拒绝理由属性
	 *
	 * @param rejectReason
	 */
	public void setRejectReason(java.lang.String rejectReason) {
		this.rejectReason = rejectReason;
	}
	
	/**
     * 获取货源状态属性
     *
     * @return status
     */
	public java.lang.String getStatus() {
		return status;
	}
	
	/**
	 * 设置货源状态属性
	 *
	 * @param status
	 */
	public void setStatus(java.lang.String status) {
		this.status = status;
	}
	
	/**
     * 获取创建人属性
     *
     * @return createdBy
     */
	public java.lang.String getCreatedBy() {
		return createdBy;
	}
	
	/**
	 * 设置创建人属性
	 *
	 * @param createdBy
	 */
	public void setCreatedBy(java.lang.String createdBy) {
		this.createdBy = createdBy;
	}
	
	/**
     * 获取创建时间属性
     *
     * @return createdTime
     */
	public java.lang.String getCreatedTime() {
		return createdTime;
	}
	
	/**
	 * 设置创建时间属性
	 *
	 * @param createdTime
	 */
	public void setCreatedTime(java.lang.String createdTime) {
		this.createdTime = createdTime;
	}
	
	/**
     * 获取修改人属性
     *
     * @return updatedBy
     */
	public java.lang.String getUpdatedBy() {
		return updatedBy;
	}
	
	/**
	 * 设置修改人属性
	 *
	 * @param updatedBy
	 */
	public void setUpdatedBy(java.lang.String updatedBy) {
		this.updatedBy = updatedBy;
	}
	
	/**
     * 获取修改时间属性
     *
     * @return updatedTime
     */
	public java.lang.String getUpdatedTime() {
		return updatedTime;
	}
	
	/**
	 * 设置修改时间属性
	 *
	 * @param updatedTime
	 */
	public void setUpdatedTime(java.lang.String updatedTime) {
		this.updatedTime = updatedTime;
	}
	
	/**
     * 获取是否删除属性
     *
     * @return isDeleted
     */
	public java.lang.String getIsDeleted() {
		return isDeleted;
	}
	
	/**
	 * 设置是否删除属性
	 *
	 * @param isDeleted
	 */
	public void setIsDeleted(java.lang.String isDeleted) {
		this.isDeleted = isDeleted;
	}
	

	@Override
    public String toString() {
        final StringBuilder sb = new StringBuilder();
        sb.append("OrderSourceInfo");
        sb.append("{sourceId=").append(sourceId);
        sb.append(", infoId=").append(infoId);
        sb.append(", startCodeP=").append(startCodeP);
        sb.append(", startCodeC=").append(startCodeC);
        sb.append(", endCodeP=").append(endCodeP);
        sb.append(", endCodeC=").append(endCodeC);
        sb.append(", needType=").append(needType);
        sb.append(", needLength=").append(needLength);
        sb.append(", needArriveTime=").append(needArriveTime);
        sb.append(", needDriverNum=").append(needDriverNum);
        sb.append(", miles=").append(miles);
        sb.append(", level=").append(level);
        sb.append(", estimatedPrice=").append(estimatedPrice);
        sb.append(", transitRequire=").append(transitRequire);
        sb.append(", startTime=").append(startTime);
        sb.append(", endTime=").append(endTime);
        sb.append(", remark=").append(remark);
        sb.append(", rejectReason=").append(rejectReason);
        sb.append(", status=").append(status);
        sb.append(", createdBy=").append(createdBy);
        sb.append(", createdTime=").append(createdTime);
        sb.append(", updatedBy=").append(updatedBy);
        sb.append(", updatedTime=").append(updatedTime);
        sb.append(", isDeleted=").append(isDeleted);
		sb.append('}');
        return sb.toString();
    }
}