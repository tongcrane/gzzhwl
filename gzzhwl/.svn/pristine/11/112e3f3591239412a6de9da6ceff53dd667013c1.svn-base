package com.gzzhwl.api.vehicle.controller;

import java.util.HashMap;
import java.util.Map;

import org.dozer.Mapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.gzzhwl.api.vehicle.service.VehicleService;
import com.gzzhwl.core.data.model.AccountInfo;
import com.gzzhwl.rest.springmvc.annotation.Authorization;
import com.gzzhwl.rest.springmvc.model.ResponseModel;

@RestController
@RequestMapping("/api/vehicle")
public class VehicleController {
		
	@Autowired
	private VehicleService service;
	
	@Autowired
	private Mapper beanMapper;
	
	
	@RequestMapping(value = "/uploadVehicleImage", method = RequestMethod.POST)
	public ResponseModel updateImage(@RequestParam MultipartFile image,@Authorization AccountInfo accountInfo) {
		
		String imageId = service.updateImage(image, accountInfo.getAccountId());
		
		Map<String,Object> resMap = new HashMap<>();
		resMap.put("imageId", imageId);
		
		return new ResponseModel(resMap);
	}
	
//	@RequestMapping(value = "/queryVehicleDetail", method = RequestMethod.GET)
//	public ResponseModel queryDetail(@RequestParam String vehicleInfoId,@Authorization AccountInfo accountInfo){
//		
//		Map<String, Object> map = service.queryDetail(vehicleInfoId);
//		
//		if(map == null){
//			return new ResponseModel(null);
//		}
//		
//		VehicleInfoVo vehicleInfoVo = beanMapper.map(map.get("vehicleInfo"), VehicleInfoVo.class);
//		
//		if(map.get("vehiclePlusInfo")!=null){
//			beanMapper.map(map.get("vehiclePlusInfo"), vehicleInfoVo);
//		}
//		
//		return new ResponseModel(vehicleInfoVo);
//	}
	
//	@RequestMapping(value = "/vehicleExistValidator", method = RequestMethod.GET)
//	public ResponseModel vehicleExistValidator(@RequestParam String plateNumber,@RequestParam(required=false) String driverInfoId,@Authorization AccountInfo accountInfo){
//		
//		if(ValidateUtils.isEmpty(plateNumber)){
//			throw new RestException(ErrorCode.ERROR_900003.getCode(),"plateNumber"+ErrorCode.ERROR_900003.getDesc());
//		}
//		
//		boolean res = service.vehicleExistValidator(plateNumber, accountInfo.getAccountId(),driverInfoId);
//		
//		Map<String,Object> resMap = new HashMap<>();
//		
//		resMap.put("result", res);
//		
//		return new ResponseModel(resMap);
//	}
//	
}
