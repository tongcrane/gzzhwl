package com.gzzhwl.core.data.extdao.impl;


import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.gzzhwl.core.constant.ConsignType;
import com.gzzhwl.core.constant.Global;
import com.gzzhwl.core.constant.LoadBillType;
import com.gzzhwl.core.data.extdao.OrderLoadInfoExtDao;
import com.gzzhwl.core.mybatis.support.DaoSupport;
import com.gzzhwl.core.page.Page;

@Repository
public class OrderLoadInfoExtDaoImpl implements OrderLoadInfoExtDao{
	@Autowired
	private DaoSupport dao;

	@Override
	public <E, K, V> Page<E> pageTripList(Map<K, V> params, int currentPage, int pageSizes) {
		return dao.page(PREFIX + ".pageTripList", params, currentPage, pageSizes);
	}

	@Override
	public Map<String, Object> getTripDetail(String loadId) {
		
		Map<String,Object> params = new HashMap<>();
		params.put("loadId", loadId);
		return dao.get(PREFIX + ".getTripDetail", params);
	}

	@Override
	public <T, K, V> List<T> getTripDrivers(String loadId) {
		Map<String, Object> params = new HashMap<String,Object>();
		params.put("loadId", loadId);
		params.put("isDeleted", Global.ISDEL_NORMAL.toString());
		return dao.find(PREFIX + ".getLoadDrivers", params);
	}
	
	

	@Override
	public <T, K, V> List<T> getLoadInfoByOrderId(String orderId) {
		Map<String, Object> params = new HashMap<String,Object>();
		params.put("orderId", orderId);
		params.put("isDeleted", Global.ISDEL_NORMAL.toString());
		return dao.find(PREFIX + ".getLoadInfoByOrderId", params);
	}

	@Override
	public <T, K, V> List<T> getLoadList(String addrId, String keyWord,String timeStamp) {
		Map<String, Object> params = new HashMap<String,Object>();
		params.put("addrId", addrId);
		if(StringUtils.isNotBlank(keyWord)) {
			params.put("keyWord", keyWord);
		}
		
		params.put("consignStatus", ConsignType.CONSIGNNORMAL.getCode());
		params.put("status", LoadBillType.DEPART.getCode());
		params.put("timeStamp", timeStamp);
		params.put("isDeleted", Global.ISDEL_NORMAL.toString());
		return dao.find(PREFIX + ".getLoadList", params);
	}

	@Override
	public <K, V> Map<K, V> getLoadMajorDriver(Map<K, V> params) {
		return dao.get(PREFIX + ".getMajorDriver", params);
	}

	

}
