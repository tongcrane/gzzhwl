<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gzzhwl.core.data.dao.OrderReturnLogDao">

	<resultMap id="orderReturnLogResultMap" type="OrderReturnLog">
		<id property="logId" column="log_id" />
		<id property="pid" column="pid" />
		<result property="sourceId" column="source_id" />
		<result property="orderId" column="order_id" />
		<result property="status" column="status" />
		<result property="remark" column="remark" />
		<result property="createdBy" column="created_by" />
		<result property="createdTime" column="created_time" />
		<result property="updatedBy" column="updated_by" />
		<result property="updatedTime" column="updated_time" />
		<result property="isDeleted" column="is_deleted" />
	</resultMap>
	<resultMap id="pageResultMap"  type="java.util.HashMap" extends="orderReturnLogResultMap"></resultMap>
	<resultMap id="findResultMap"  type="java.util.HashMap" extends="orderReturnLogResultMap"></resultMap>

	<select id="get" parameterType="map" resultMap="orderReturnLogResultMap">
	   select 
	   	 pid,
	     log_id,
	     source_id,
	     order_id,
	     status,
	     remark,
	     created_by,
	     created_time,
	     updated_by,
	     updated_time,
	     is_deleted
		from zh_order_return_log
		where log_id = #{logId}
	</select>
	
	<insert id="insert" parameterType="OrderReturnLog">
	   insert into zh_order_return_log (
	     pid,
	     log_id,
	     source_id,
	     order_id,
	     status,
	     remark,
	     created_by,
	     created_time,
	     updated_by,
	     updated_time,
	     is_deleted
	   )values (
	     #{pid},
	     #{logId},
	     #{sourceId},
	     #{orderId},
	     #{status},
	     #{remark},
	     #{createdBy},
	     now(),
	     #{updatedBy},
	     now(),
	     #{isDeleted}
	   )
	</insert>
	
	<update id="updateSelective" parameterType="OrderReturnLog">
	   update zh_order_return_log
	   <trim prefix="set" suffixOverrides=",">
		     <if test="status != null">
		       status=#{status},
		     </if>
		     <if test="remark != null">
		       remark=#{remark},
		     </if>
		     <if test="updatedBy != null">
		       updated_by=#{updatedBy},
		     </if>
		       updated_time=now(),
		     <if test="isDeleted != null">
		       is_deleted=#{isDeleted}
		     </if>
	   </trim>
	   where 
	    log_id=#{logId} 
	</update>

	<select id="getApplyLog" parameterType="map" resultType="string">
	   select zorl.log_id
		from zh_order_return_log zorl
		inner join (zh_flow_status zfs
				inner join zh_flows zf on zfs.flow_id = zf.flow_id and zf.name = #{flowName})
				on zfs.code = zorl.status 
		where zfs.type = #{statusType} and source_id = #{sourceId}
	</select>
</mapper> 