<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gzzhwl.core.data.extdao.RemarkInfoExtDao">

	<resultMap id="remarkInfoResultMap" type="RemarkInfo">
		<id property="pid" column="pid" />
		<id property="remarkId" column="remark_id" />
		<result property="pid" column="pid" />
		<result property="remarkId" column="remark_id" />
		<result property="targetId" column="target_id" />
		<result property="type" column="type" />
		<result property="content" column="content" />
		<result property="createdBy" column="created_by" />
		<result property="createdTime" column="created_time" />
	</resultMap>
	
	<resultMap id="loadFeedbackAttaResultMap" type="java.util.HashMap">
		<result property="feedbackId" column="feedback_id" />
		<result property="fileId" column="file_id" />
	</resultMap>
	
	<resultMap id="pageResultMap"  type="java.util.HashMap" extends="remarkInfoResultMap"></resultMap>
	<resultMap id="findResultMap"  type="java.util.HashMap" extends="remarkInfoResultMap"></resultMap>
	
	<resultMap id="loadRecordResultMap"  type="java.util.HashMap" extends="findResultMap">
		<result property="position" column="position" />
		<result property="isEnd" column="is_end" />
		<result property="srcStatus" column="src_status" />
		<result property="destStatus" column="dest_status" />
		<result property="sortTime" column="sort_time" />
		<result property="longitude" column="longitude" />
		<result property="latitude" column="latitude" />
		<result property="isException" column="is_exception" />
		<result property="endTime" column="end_time" />
		<result property="address" column="address" />
		<result property="type" column="type" />
		<result property="source" column="source" />
		<result property="startTime" column="feedback_time" />
		<result property="itemDesc" column="item_desc" />
		<collection property="atta" ofType="map" javaType="java.util.List"  select="getLoadFeedbackAttaList"  column="{feedbackId=feedback_id}"/>
	</resultMap>


	<!-- 获取货源操作记录 -->
	<select id="getSourceRecordList" parameterType="map" resultMap="findResultMap">
	   (
		SELECT
		CONCAT("修改备注:",content)  content,
		t2.real_name,
		t2.real_name as realName,
		date_format(t1.created_time,'%Y-%m-%d %H:%i') as created_time
		FROM
		zh_remark_info t1,zh_staff_info t2
		where
		t1.created_by = t2.staff_id
		and
		t1.type = #{remarkType}
		and
		target_id  = #{target_id}
		)
		union all
		(
		SELECT
		msg_info,
		t2.real_name,
		t2.real_name,
		date_format(t1.created_time,'%Y-%m-%d %H:%i') as created_time
		FROM
		zh_source_his t1,zh_staff_info t2
		where
		t1.created_by = t2.staff_id
		and
		source_id  = #{target_id}
		)
		order by created_time desc
	</select>
	
	<!-- 获取订单操作记录 -->
	<select id="getOrderRecordList" parameterType="map" resultMap="findResultMap">
	 	(
		SELECT
		CONCAT("修改备注:",content)  content,
		t2.real_name,
		t2.real_name as realName,
		date_format(t1.created_time,'%Y-%m-%d %H:%i') as created_time
		FROM
		zh_remark_info t1,zh_staff_info t2
		where
		t1.created_by = t2.staff_id
		and
		t1.type = #{remarkType}
		and
		target_id  = #{target_id}
		)
		union all
		(
		SELECT
		msg_info,
		t2.real_name,
		t2.real_name,
		date_format(t1.created_time,'%Y-%m-%d %H:%i') as created_time
		FROM
		zh_order_his t1,zh_staff_info t2
		where
		t1.created_by = t2.staff_id
		and
		order_id  = #{target_id}
		)
		order by created_time desc
	</select>
	
	<!-- 获取提货单操作记录 -->
	<select id="getLoadRecordList" parameterType="map" resultMap="loadRecordResultMap">
		(SELECT CONCAT('异常反馈:', item_name) content,
          CASE
              WHEN t1.source = '01' THEN t2.real_name
              ELSE t3.real_name
          END AS realName,
          date_format(t1.feedback_time, '%Y-%m-%d %H:%i') AS created_time,
          CASE
              WHEN t1.source = '01' THEN t2.position
              ELSE "司机"
          END AS position,
          t1.feedback_id,
          t1.is_end,
          NULL AS src_status,
          NULL AS dest_status,
          t1.created_time AS sort_time,
	  	  longitude,
	  	  latitude,
	  	  is_exception,
		  case when  t1.is_end = '01'
	      then date_format(t1.end_time,'%Y-%m-%d %H:%i') 
	   	  else ""
	      end as end_time,
	  	  t1.address,
	  	  t1.source,
	  	  t1.type,
	  	  CASE
              WHEN t1.source = '01' THEN t2.real_name
              ELSE t3.real_name
          END AS real_name,
          t1.item_desc,
          t1.feedback_time
		FROM
		zh_load_feedback_log t1
		left join 
		zh_staff_info t2 on  t1.updated_by = t2.staff_id
		left join 
		zh_agent_info  t3 on t1.updated_by = t3.account_id
		WHERE
		t1.is_deleted = #{isDeleted}
		and
		t1.load_id  = #{targetId}
		and
		is_exception = '01'
		<if test="statusArray != null">
		 and t1.status in
		  <foreach collection="statusArray" index="index" item="status" open="(" separator="," close=")">  
		        	#{status}
		   </foreach>
	    </if>
		)
		union all
		(SELECT msg_info,
          CASE
              WHEN (t1.user_type = '01' or t1.user_type = '00') THEN t2.real_name
              ELSE t3.real_name
          END AS realName,
          date_format(t1.action_time,'%Y-%m-%d %H:%i') AS created_time,
          CASE
              WHEN (t1.user_type = '01' or t1.user_type = '00')  THEN t2.position
              ELSE "司机"
          END AS position,
          NULL as feedback_id,
		NULL as is_end,
		src_status,
		dest_status,
		t1.created_time AS sort_time,
		NULL as longitude,
		NULL as latitude,
		NULL as is_exception,
		NULL as end_time,
		NULL as address,
		NULL as source,
		NULL as type,
	  	   CASE
              WHEN (t1.user_type = '01' or t1.user_type = '00')  THEN t2.real_name
              ELSE t3.real_name
          END AS real_name,
        null as item_desc,
        null as feedback_time
		FROM
		zh_load_his t1 left join zh_staff_info t2 on t1.created_by = t2.staff_id
		left join zh_agent_info  t3  on t1.created_by = t3.account_id 
		where
		t1.is_deleted = #{isDeleted}
		and
		load_id =  #{targetId}
		<if test="statusArray != null">
		 and src_status in
		  <foreach collection="statusArray" index="index" item="status" open="(" separator="," close=")">  
		        	#{status}
		   </foreach>
	    </if>
		)
		order by created_time desc,sort_time desc
	</select>
	
	<select id="getLoadFeedbackAttaList" parameterType="map" resultMap="loadFeedbackAttaResultMap">
	   select 
	    feedback_id,
	    file_id
	   from zh_load_feedback_atta
	   where 
	    feedback_id=#{feedbackId} 
	</select>
	
</mapper> 