<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gzzhwl.core.data.dao.StaffLoginHistoryDao">

	<resultMap id="staffLoginHistoryResultMap" type="StaffLoginHistory">
		<id property="loginHistoryId" column="login_history_id" />
		<result property="accountId" column="account_id" />
		<result property="accessToken" column="access_token" />
		<result property="loginType" column="login_type" />
		<result property="status" column="status" />
		<result property="loginTime" column="login_time" />
		<result property="logoutTime" column="logout_time" />
	</resultMap>
	<resultMap id="pageResultMap"  type="java.util.HashMap" extends="staffLoginHistoryResultMap"></resultMap>
	<resultMap id="findResultMap"  type="java.util.HashMap" extends="staffLoginHistoryResultMap"></resultMap>

	<insert id="insert" parameterType="StaffLoginHistory">
	   insert into zh_staff_login_history (
	     login_history_id,
	     account_id,
	     access_token,
	     login_type,
	     status,
	     login_time,
	     logout_time
	   )values (
	     #{loginHistoryId},
	     #{accountId},
	     #{accessToken},
	     #{loginType},
	     #{status},
	     now(),
	     #{logoutTime}
	   )
	</insert>

	<update id="update" parameterType="StaffLoginHistory">
	   update zh_staff_login_history set
	     login_history_id=#{loginHistoryId},
	     account_id=#{accountId},
	     access_token=#{accessToken},
	     login_type=#{loginType},
	     status=#{status},
	     login_time=#{loginTime},
	     logout_time=#{logoutTime}
	   where 
	    login_history_id=#{loginHistoryId} 
	</update>
	
	<update id="updateSelective" parameterType="StaffLoginHistory">
	   update zh_staff_login_history
	   <trim prefix="set" suffixOverrides=",">
		     <if test="loginHistoryId != null">
		       login_history_id=#{loginHistoryId},
		     </if>
		     <if test="accountId != null">
		       account_id=#{accountId},
		     </if>
		     <if test="accessToken != null">
		       access_token=#{accessToken},
		     </if>
		     <if test="loginType != null">
		       login_type=#{loginType},
		     </if>
		     <if test="status != null">
		       status=#{status},
		     </if>
		     <if test="loginTime != null">
		       login_time=#{loginTime},
		     </if>
		     <if test="logoutTime != null">
		       logout_time=#{logoutTime}
		     </if>
	   </trim>
	
	   where 
	    login_history_id=#{loginHistoryId} 
	</update>

	<delete id="delete" parameterType="map">
	   delete from 
	     zh_staff_login_history 
	   where 
	    login_history_id=#{loginHistoryId} 
	</delete>

	<select id="get" parameterType="map" resultMap="staffLoginHistoryResultMap">
	   select 
	    login_history_id,
	    account_id,
	    access_token,
	    login_type,
	    status,
	    login_time,
	    logout_time
	   from zh_staff_login_history
	   where 
	    login_history_id=#{loginHistoryId} 
	</select>

	<select id="findOne" parameterType="map" resultMap="findResultMap">
	   select 
	    login_history_id,
	    account_id,
	    access_token,
	    login_type,
	    status,
	    login_time,
	    logout_time
	   from zh_staff_login_history
	   where 
	    login_history_id=#{loginHistoryId} 
	</select>

	<select id="find" parameterType="map" resultMap="findResultMap">
	   select 
	     login_history_id,
	     account_id,
	     access_token,
	     login_type,
	     status,
	     login_time,
	     logout_time
	   from zh_staff_login_history
	   <trim prefix="WHERE" prefixOverrides="AND |OR ">
	     <if test="loginHistoryId != null">
	        login_history_id=#{loginHistoryId}
	     </if>
	     <if test="accountId != null">
	        and account_id=#{accountId}
	     </if>
	     <if test="accessToken != null">
	        and access_token=#{accessToken}
	     </if>
	     <if test="loginType != null">
	        and login_type=#{loginType}
	     </if>
	     <if test="status != null">
	        and status=#{status}
	     </if>
	     <if test="loginTime != null">
	        and login_time=#{loginTime}
	     </if>
	     <if test="logoutTime != null">
	        and logout_time=#{logoutTime}
	     </if>
	   </trim>
	</select>
	
	<select id="page" parameterType="map" resultMap="pageResultMap">
	   select 
	     login_history_id,
	     account_id,
	     access_token,
	     login_type,
	     status,
	     login_time,
	     logout_time
	   from zh_staff_login_history
	   <trim prefix="WHERE" prefixOverrides="AND |OR ">
	     <if test="loginHistoryId != null">
	        login_history_id=#{loginHistoryId}
	     </if>
	     <if test="accountId != null">
	        and account_id=#{accountId}
	     </if>
	     <if test="accessToken != null">
	        and access_token=#{accessToken}
	     </if>
	     <if test="loginType != null">
	        and login_type=#{loginType}
	     </if>
	     <if test="status != null">
	        and status=#{status}
	     </if>
	     <if test="loginTime != null">
	        and login_time=#{loginTime}
	     </if>
	     <if test="logoutTime != null">
	        and logout_time=#{logoutTime}
	     </if>
	   </trim>
	</select>
	
	<select id="findLoginHis" parameterType="map" resultMap="staffLoginHistoryResultMap">
	   select
			zslh.login_history_id,
			zslh.account_id,
			zslh.access_token,
			zslh.login_type,
			zslh.status,
			zslh.login_time,
			zslh.logout_time
		from
			zh_staff_login_history zslh
		inner join zh_staff_login_history zslht on zslh.account_id = zslht.account_id
		and zslh.login_type = zslht.login_type
		<where>
		 <if test="status != null">
	        AND zslh.status = #{status}
	     </if>
	     <if test="accountId != null">
	        AND zslh.account_id = #{accountId}
	     </if>
	     <if test="accessToken != null">
	        AND zslh.access_token = #{accessToken}
	     </if>
	   </where>
		order by
			zslh.logout_time DESC
	</select>
	
	<update id="updateStatus" parameterType="map">
		update zh_staff_login_history
		<trim prefix="set" suffixOverrides=",">
		     <if test="logoutStatus != null">
		       status=#{logoutStatus},
		     </if>
		     <if test="logoutTime != null">
		       logout_time=now()
		     </if>
	   </trim>
	   <trim prefix="WHERE" prefixOverrides="AND |OR ">
	     <if test="accountId != null">
	        and account_id=#{accountId}
	     </if>
	     <if test="loginType != null">
	        and login_type=#{loginType}
	     </if>
	     <if test="loginStatus != null">
	        and status=#{loginStatus}
	     </if>
	   </trim>
	</update>
</mapper> 